#!/usr/bin/env bash

nginx_configure()
{
  if gcc --version | grep '4.6' > /dev/null 2>&1
  then
    if variable_is_nonempty CFLAGS
    then # Adjust for gcc 4.6 strictness.
      export CFLAGS="-Wunused-but-set-variable ${CFLAGS}"
    else
      export CFLAGS="-Wunused-but-set-variable"
    fi
  fi

  package_configure
}

configure_nginx()
{
  ensure_paths_exist "${config_directories[@]}"

  (
  # Cleanup default nginx install messy directory.
  enter "$nginx_path"
  move_files to "${nginx_config_path}" "${nginx_files[@]}"
  )

  ensure_paths_exist "${nginx_config_path}" "${nginx_servers_path}"

  install_template "nginx.conf" to "${nginx_path}/nginx.conf" \
    mode 0644 owner "${nginx_user}"

  install_template "nginx" to "${init_scripts_path}/nginx" \
    mode 0755 owner "${nginx_user}"

  templates=( "mime.types" "proxy.conf" )
  for template in "${templates[@]}"
  do
    install_template "${template}" to "${nginx_config_path}/${template}" \
      mode 0644 owner "${nginx_user}"
  done

  user_create_if_missing "nginx" with group "nginx"

  if user_is_root
  then
    if ! directory_exists "/etc/nginx"
    then
      link "${install_base_path}/active/nginx" "/etc/nginx"
    fi
    link --force "${nginx_binary}" to "/usr/sbin/nginx"
  fi

  chown_paths_recursively "nginx:nginx" "${config_directories[@]}"
}
